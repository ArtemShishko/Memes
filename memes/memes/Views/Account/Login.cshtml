@using memes.Models
@model LoginViewModel
@{
}

<link rel="stylesheet" type="text/css" href="~/Content/signin.css">
<div class="container">
    <div class="row" style="margin-top:70px">
        <div class="col-sm-9 col-md-7 col-lg-5 mx-auto">
            <section id="loginForm">
                @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-signin", role = "form" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="card card-signin my-5" style="background: #f7f7f7">
                        <div class="card-body">
                            <h5 class="card-title text-center">Sign In</h5>
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-label-group">
                                @Html.TextBoxFor(m => m.Email, new
                               {
                                   @class = "form-control",
                                   id = "inputEmail",
                                   type = "email",
                                   placeholder = "Email address",
                                   required = true,
                                   autofocus = true,
                                   style = "min-width:380px"

                               })
                                @Html.LabelFor(m => m.Email, new { @for = "inputEmail" })
                                @*  @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })*@
                            </div>

                            <div class="form-label-group">
                                @Html.PasswordFor(m => m.Password, new
                                {
                                    @class = "form-control",
                                    @id = "inputPassword",
                                    @type = "password",
                                    @placeholder = "Password",
                                    @required = true,
                            style = "min-width:380px"
                                })
                                @Html.LabelFor(m => m.Password, new { @for = "inputPassword" })
                            </div>

                            <div class="custom-control custom-checkbox mb-3" style="margin-left:10px">
                                @Html.CheckBoxFor(m => m.RememberMe, new { @type = "checkbox", @class = "custom-control-input", @id = "customCheck1" })
                                @Html.LabelFor(m => m.RememberMe, new { @class = "custom-control-label", @for = "customCheck1" })
                            </div>



                            <button class="btn btn-lg btn-dark btn-block text-uppercase" style="margin-bottom:20px" type="submit">Sign in</button>

                            <a href="@Url.Action("Register", "Account")" class="display-4" style="font-size: 18px; margin-left: 35px; margin-top:20px">Don't have an account? Then sign up</a>

                            @*<hr class="my-4" />

        <button class="btn btn-lg btn-google btn-block text-uppercase" type="submit">
            <i class="fab fa-google mr-2"></i>
            Sign in with Google
        </button>*@
                        </div>
                    </div>
                }
            </section>
        </div>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}